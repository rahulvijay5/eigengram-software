// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  externalId    String         @unique
  phoneNumber   String
  name          String?
  role          Role           @default(USER)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  subscriptions Subscription[]
  usages        Usage[]
  featureRequests FeatureRequest[]
}

model Service {
  id          String   @id @default(cuid())
  name        String
  description String
  imageUrl    String?
  awsModelUrl String
  price       Decimal
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  subscriptions Subscription[]
  usages        Usage[]
}

model Subscription {
  id        String   @id @default(cuid())
  userId    String
  serviceId String
  status    SubscriptionStatus
  startDate DateTime
  endDate   DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  service   Service  @relation(fields: [serviceId], references: [id])
}

model Usage {
  id        String   @id @default(cuid())
  userId    String
  serviceId String
  amount    Int
  date      DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  service   Service  @relation(fields: [serviceId], references: [id])
}

model FeatureRequest {
  id          String   @id @default(cuid())
  userId      String
  title       String
  description String
  status      RequestStatus @default(PENDING)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum SubscriptionStatus {
  PENDING
  ACTIVE
  INACTIVE
  CANCELLED
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
  IMPLEMENTED
}